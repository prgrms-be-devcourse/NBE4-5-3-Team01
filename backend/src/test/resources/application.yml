spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:test;MODE=MYSQL
    username: sa
    password:

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 30
        dialect: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true

  security:
    oauth2:
      client:
        registration:
          spotify:
            client-id: fadbee879e0e4575a2bb28abfe276934
            client-secret: 9a938eb715544e279e03a547c0e64aa5
            scope: user-read-private, user-read-email
            redirect-uri: http://localhost:8080/api/v1/login/oauth2/code/spotify
            authorization-grant-type: authorization_code
            client-name: Spotify
        provider:
          spotify:
            authorization-uri: https://accounts.spotify.com/authorize
            token-uri: https://accounts.spotify.com/api/token
            user-info-uri: https://api.spotify.com/v1/me
            user-name-attribute: id

  sql:
    init:
      mode: always

  h2:
    console:
      enabled: true

  mail:
    username: asdfasdf@adsfasdf
    password: asdfasdf
    host: smtp.gmail.com
    port: 587
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

push:
  vapid:
    publicKey: "BJSowR6aDh89tu-QupRzNmwjVrr63q2Wbstv536bFya4emx8YigwBkd4Ogbusg6X6uzeNzOkY678PlY9U66xSIU"
    privateKey: "YdObw6wJN_UkDASF6mAMcRkZuT6eGCmBuoU54xH5sa0"

toss:
  client-key: test_ck_5OWRapdA8dP5dB4NPlyB8o1zEqZK
  secret-key: test_sk_0RnYX2w532MB1mZpel9K8NeyqApQ
  webhook-secret: d92e8111a505dbba9da51ef9d76bbf50a462e08c07cef1ad773f22c2db5659ed