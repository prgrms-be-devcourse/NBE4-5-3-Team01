server:
  port: 8080
  servlet:
    contextPath: /api/v1

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${URL}
    username: ${USER}
    password: ${PASSWORD}

  security:
    oauth2:
      client:
        registration:
          spotify:
            client-id: fadbee879e0e4575a2bb28abfe276934
            client-secret: 9a938eb715544e279e03a547c0e64aa5
            scope: user-read-private, user-read-email, playlist-read-private, user-read-playback-state, user-modify-playback-state, streaming
            redirect-uri: http://localhost:8080/api/v1/login/oauth2/code/spotify
            authorization-grant-type: authorization_code
            client-name: Spotify
        provider:
          spotify:
            authorization-uri: https://accounts.spotify.com/authorize
            token-uri: https://accounts.spotify.com/api/token
            user-info-uri: https://api.spotify.com/v1/me
            user-name-attribute: id

  logging:
    level:
      org:
        hibernate:
          SQL: DEBUG
        springframework:
          security: DEBUG
          security.oauth2: DEBUG
          web: DEBUG

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQLDialect
    generate-ddl: true
    hibernate:
      ddl-auto: update

  mail:
    username: ${HOST_EMAIL}
    password: ${EMAIL_PASSWORD}
    host: smtp.gmail.com
    port: 587
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

push:
  vapid:
    publicKey: "BJSowR6aDh89tu-QupRzNmwjVrr63q2Wbstv536bFya4emx8YigwBkd4Ogbusg6X6uzeNzOkY678PlY9U66xSIU"
    privateKey: "YdObw6wJN_UkDASF6mAMcRkZuT6eGCmBuoU54xH5sa0"
